{"version":3,"sources":["components/fullSalary/InputFullSalary.js","components/readOnly/InputReadOnly.js","helpers/salary.js","components/progressBar/Bar.js","components/progressBar/ProgressBarSalary.js","App.js","index.js"],"names":["InputFullSalary","handleInputChange","event","newValue","target","value","props","onChangeValue","this","className","type","onChange","Component","InputReadOnly","label","color","disabled","style","fontWeight","INSS_TABLE","id","minValue","maxValue","difference","discountPercentage","discountValue","round","toFixed","calculateSalaryFrom","fullSalary","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","netSalary","optionCurrency","currency","optionPercentage","minimumFractionDigits","formatCurrency","Intl","NumberFormat","format","getPercent","formatPercent","Bar","marginTop","width","height","backgroundColor","ProgressBarSalary","percentINSS","percentIRPF","percentNetSalary","display","flexDirection","alignItems","justifyContent","App","handleChangeFullSalary","setState","state","calculatePercentualFrom","styles","centeredTitle","textAlign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEqBA,E,4MACnBC,kBAAoB,SAACC,GACnB,IAAMC,EAAWD,EAAME,OAAOC,MAC9B,EAAKC,MAAMC,cAAcJ,I,uDAGjB,IACAE,EAAUG,KAAKF,MAAfD,MACR,OACE,yBAAKI,UAAU,uBACb,2BAAOC,KAAK,SAASL,MAAOA,EAAOM,SAAUH,KAAKP,oBAClD,wD,GAXqCW,aCAxBC,E,uKACT,IAAD,EACmCL,KAAKF,MAAvCQ,EADD,EACCA,MAAOT,EADR,EACQA,MADR,IACeU,aADf,MACuB,QADvB,EAEP,OACE,yBAAKN,UAAU,sBACb,2BAAOO,UAAQ,EAACN,KAAK,OAAOO,MAAO,CAAEF,MAAM,GAAD,OAAKA,GAASG,WAAY,QAAUb,MAAOA,IACrF,+BAAQS,Q,GAN2BF,aCArCO,EAAa,CACjB,CACEC,GAAI,EACJC,SAAU,EACVC,SAAU,KACVC,WAAY,KACZC,mBAAoB,KACpBC,eAAgB,GAElB,CACEL,GAAI,EACJC,SAAU,QACVC,SAAU,OACVC,WAAY,OACZC,mBAAoB,KAEtB,CACEJ,GAAI,EACJC,SAAU,QACVC,SAAU,OACVC,WAAY,OAAS,OACrBC,mBAAoB,KAEtB,CACEJ,GAAI,EACJC,SAAU,QACVC,SAAU,QACVC,WAAY,QAAU,OACtBC,mBAAoB,MAIxB,SAASE,EAAMrB,GACb,OAAQA,EAAMsB,QAAQ,GAoDxB,SAASC,EAAoBC,GAC3B,IAAMC,EAAWD,EACXE,EAnDR,SAA+BD,GAC7B,IAAIC,EAAe,EAEnB,GAAID,EAAW,QACb,OAAO,MAGT,IAAK,IAAIE,EAAI,EAAGA,EAAIb,EAAWc,OAAQD,IAAK,CAC1C,IAAIE,EAAcf,EAAWa,GAG7B,KAAIF,EAAWI,EAAYZ,UAMpB,CAKLS,GAFEL,GAAOI,EAAWI,EAAYb,UAAYa,EAAYV,oBAGxD,MAPAO,GAFEL,EAAMQ,EAAYX,WAAaW,EAAYV,oBAejD,OAFAO,EAAeL,EAAMK,GAwBAI,CAAsBL,GAErCM,EAAWN,EAAWC,EACtBM,EAtBR,SAA+BD,GAC7B,IAAIC,EACFD,EAAW,QACP,EACAA,EAAW,QACTV,EAAiB,KAAXU,GAAoB,MAC1BA,EAAW,QACTV,EAAiB,IAAXU,GAAmB,MACzBA,EAAW,QACTV,EAAiB,KAAXU,GAAoB,OAC1BV,EAAiB,KAAXU,GAAoB,OAItC,OAFAC,EAAeX,EAAMW,GAUAC,CAAsBF,GAI3C,MAAO,CACLN,WACAC,eACAK,WACAC,eACAE,UAPgBT,EAAWC,EAAeM,GAuB9C,IAAMG,EAAiB,CAAEvB,MAAO,WAAYwB,SAAU,OAChDC,EAAmB,CACvBzB,MAAO,UACP0B,sBAAuB,GAEzB,SAASC,EAAevC,GAEtB,OADkB,IAAIwC,KAAKC,aAAa,QAASN,GAChCO,OAAO1C,GAG1B,SAAS2C,EAAW3C,EAAOwB,GACzB,OAASxB,EAAQwB,EAAc,IAGjC,SAASoB,EAAc5C,GAErB,OADkB,IAAIwC,KAAKC,aAAa,QAASJ,GAChCK,OAAO1C,EAAQ,K,ICnIb6C,E,uKACT,IAAD,EAC4B1C,KAAKF,MAAhCD,EADD,EACCA,MADD,IACQU,aADR,MACgB,QADhB,EAGP,OACE,yBACEE,MAAO,CACLkC,UAAW,OACXC,MAAO/C,EAAQ,IACfgD,OAAQ,OACRC,gBAAiBvC,S,GAVMH,aCCZ2C,E,uKAET,IAAD,EACgD/C,KAAKF,MAApDkD,EADD,EACCA,YAAaC,EADd,EACcA,YAAaC,EAD3B,EAC2BA,iBAElC,OACE,6BACE,yBACEzC,MAAO,CACL0C,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,WAGlB,kBAAC,EAAD,CAAKzD,MAAOmD,EAAazC,MAAM,YAC/B,kBAAC,EAAD,CAAKV,MAAOoD,EAAa1C,MAAM,YAC/B,kBAAC,EAAD,CAAKV,MAAOqD,EAAkB3C,MAAM,kB,GAjBCH,aCI1BmD,E,kDACnB,aAAe,IAAD,8BACZ,gBAOFC,uBAAyB,SAAC7D,GACxB,EAAK8D,SAAS,CACZpC,WAAY1B,KAPd,EAAK+D,MAAQ,CACXrC,WAAY,KAJF,E,qDAcJ,IACAA,EAAerB,KAAK0D,MAApBrC,WADD,EAE+DD,EAAoBC,GAAlFC,EAFD,EAECA,SAAUM,EAFX,EAEWA,SAAUL,EAFrB,EAEqBA,aAAcM,EAFnC,EAEmCA,aAAcE,EAFjD,EAEiDA,UAFjD,EHmFX,SAAiCV,EAAYE,EAAcM,EAAcE,GAKvE,MAAO,CACLiB,YALkBR,EAAWjB,EAAcF,GAM3C4B,YALkBT,EAAWX,EAAcR,GAM3C6B,iBALuBV,EAAWT,EAAWV,IGnFUsC,CAAwBtC,EAAYE,EAAcM,EAAcE,GAA/GiB,EAHD,EAGCA,YAAaC,EAHd,EAGcA,YAAaC,EAH3B,EAG2BA,iBAClC,OACE,yBAAKjD,UAAU,aACb,wBAAIQ,MAAOmD,EAAOC,eAAlB,oBACA,yBAAK5D,UAAU,OACb,0BAAMA,UAAU,WACd,yBAAKA,UAAU,OACb,kBAAC,EAAD,CAAiBJ,MAAOwB,EAAYtB,cAAeC,KAAKwD,0BAE1D,yBAAKvD,UAAU,OACb,kBAAC,EAAD,CAAeK,MAAM,YAAYT,MAAK,UAAKuC,EAAed,MAC1D,kBAAC,EAAD,CAAehB,MAAM,gBAAgBT,MAAK,UAAKuC,EAAeb,GAApB,aAAsCkB,EAAcO,GAApD,KAAqEzC,MAAM,YACrH,kBAAC,EAAD,CAAeD,MAAM,YAAYT,MAAK,UAAKuC,EAAeR,MAC1D,kBAAC,EAAD,CAAetB,MAAM,gBAAgBT,MAAK,UAAKuC,EAAeP,GAApB,aAAsCY,EAAcQ,GAApD,KAAqE1C,MAAM,aAEvH,yBAAKN,UAAU,OACb,kBAAC,EAAD,CAAeK,MAAM,wBAAkBT,MAAK,UAAKuC,EAAeL,GAApB,aAAmCU,EAAcS,GAAjD,KAAuE3C,MAAM,eAI/H,kBAAC,EAAD,CAAmByC,YAAaA,EAAaC,YAAaA,EAAaC,iBAAkBA,S,GAtChE9C,aA4C3BwD,EAAS,CACbC,cAAe,CACbC,UAAW,WC3CfC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c3a63619.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class InputFullSalary extends Component {\r\n  handleInputChange = (event) => {\r\n    const newValue = event.target.value;\r\n    this.props.onChangeValue(newValue);\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <div className=\"input-field col s12\">\r\n        <input type=\"number\" value={value} onChange={this.handleInputChange} />\r\n        <label>Sal√°rio bruto</label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class InputReadOnly extends Component {\r\n  render() {\r\n    const { label, value, color = 'black' } = this.props;\r\n    return (\r\n      <div className=\"input-field col s3\">\r\n        <input disabled type=\"text\" style={{ color: `${color}`, fontWeight: 'bold' }} value={value} />\r\n        <label>{label}</label>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.07) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue =\r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue =\r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n        ? round(baseIRPF * 0.075) - 142.8\r\n        : baseIRPF < 3751.05\r\n          ? round(baseIRPF * 0.15) - 354.8\r\n          : baseIRPF < 4664.68\r\n            ? round(baseIRPF * 0.225) - 636.13\r\n            : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  const baseINSS = fullSalary;\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n  };\r\n}\r\n\r\nfunction calculatePercentualFrom(fullSalary, discountINSS, discountIRPF, netSalary) {\r\n  const percentINSS = getPercent(discountINSS, fullSalary);\r\n  const percentIRPF = getPercent(discountIRPF, fullSalary);\r\n  const percentNetSalary = getPercent(netSalary, fullSalary);\r\n\r\n  return {\r\n    percentINSS,\r\n    percentIRPF,\r\n    percentNetSalary,\r\n  };\r\n}\r\n\r\nconst optionCurrency = { style: 'currency', currency: 'BRL' };\r\nconst optionPercentage = {\r\n  style: 'percent',\r\n  minimumFractionDigits: 2\r\n}\r\nfunction formatCurrency(value) {\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", optionCurrency);\r\n  return formatter.format(value);\r\n}\r\n\r\nfunction getPercent(value, fullSalary) {\r\n  return ((value / fullSalary) * 100);\r\n}\r\n\r\nfunction formatPercent(value) {\r\n  const formatter = new Intl.NumberFormat(\"pt-BR\", optionPercentage);\r\n  return formatter.format(value / 100);\r\n}\r\n\r\nexport { calculateSalaryFrom, formatCurrency, calculatePercentualFrom, formatPercent };\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Bar extends Component {\r\n  render() {\r\n    const { value, color = \"black\" } = this.props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          marginTop: \"40px\",\r\n          width: value + \"%\",\r\n          height: \"20px\",\r\n          backgroundColor: color\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Bar from './Bar';\r\n\r\nexport default class ProgressBarSalary extends Component {\r\n\r\n  render() {\r\n    const { percentINSS, percentIRPF, percentNetSalary } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <Bar value={percentINSS} color=\"#e67e22\" />\r\n          <Bar value={percentIRPF} color=\"#c0392b\" />\r\n          <Bar value={percentNetSalary} color=\"#16a085\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport InputFullSalary from './components/fullSalary/InputFullSalary';\r\nimport InputReadOnly from './components/readOnly/InputReadOnly';\r\nimport { calculateSalaryFrom, formatCurrency, formatPercent, calculatePercentualFrom } from './helpers/salary';\r\nimport ProgressBarSalary from './components/progressBar/ProgressBarSalary';\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      fullSalary: 1000\r\n    }\r\n  }\r\n\r\n  handleChangeFullSalary = (newValue) => {\r\n    this.setState({\r\n      fullSalary: newValue,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { fullSalary } = this.state;\r\n    const { baseINSS, baseIRPF, discountINSS, discountIRPF, netSalary } = calculateSalaryFrom(fullSalary);\r\n    const { percentINSS, percentIRPF, percentNetSalary } = calculatePercentualFrom(fullSalary, discountINSS, discountIRPF, netSalary);\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 style={styles.centeredTitle}>React Sal√°rio</h1>\r\n        <div className=\"row\">\r\n          <form className=\"col s12\">\r\n            <div className=\"row\">\r\n              <InputFullSalary value={fullSalary} onChangeValue={this.handleChangeFullSalary} />\r\n            </div>\r\n            <div className=\"row\">\r\n              <InputReadOnly label=\"Base INSS\" value={`${formatCurrency(baseINSS)}`} />\r\n              <InputReadOnly label=\"Desconto INSS\" value={`${formatCurrency(discountINSS)} (${formatPercent(percentINSS)})`} color=\"#e67e22\" />\r\n              <InputReadOnly label=\"Base IRPF\" value={`${formatCurrency(baseIRPF)}`} />\r\n              <InputReadOnly label=\"Desconto IRPF\" value={`${formatCurrency(discountIRPF)} (${formatPercent(percentIRPF)})`} color=\"#c0392b\" />\r\n            </div>\r\n            <div className=\"row\">\r\n              <InputReadOnly label=\"Sal√°rio l√≠quido\" value={`${formatCurrency(netSalary)} (${formatPercent(percentNetSalary)})`} color=\"#16a085\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <ProgressBarSalary percentINSS={percentINSS} percentIRPF={percentIRPF} percentNetSalary={percentNetSalary} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  centeredTitle: {\r\n    textAlign: 'center',\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport './index.css';\r\n\r\nimport 'materialize-css/dist/js/materialize';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}